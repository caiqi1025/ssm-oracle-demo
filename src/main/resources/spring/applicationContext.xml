<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd ">

	<description>spring配置</description>
	
	<!-- 引入数据库连接配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.ssm.demo.service,com.ssm.demo.dao">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
	</context:component-scan>
	
	<!-- 数据库配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" lazy-init="true" >
		<property name="driverClass" value="${db.driver}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="autoCommitOnClose" value="true" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="80" />
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="100" />
		<property name="acquireIncrement" value="5" />
		<property name="idleConnectionTestPeriod" value="6000" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="checkoutTimeout" value="10000" />
	</bean>
	
	<!-- 配置sqlSession工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	<!-- 配置sqlSession模板 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>
    
    <!-- 声明式事务配置注解驱动 -->  
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!--  配置事务传播特性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" read-only="false" />
			<tx:method name="delete*" read-only="false" />
			<tx:method name="update*" read-only="false" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
     
    <!-- 配置参与事务的类的方法 -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.ssm.demo.service..*.*(..))" advice-ref="transactionAdvice" />
	</aop:config>
</beans>